.w1ui65ge{color:rgb(255,255,255,.6) !important;background-image:linear-gradient(to bottom,#415a99,var(--w1ui65ge-0));padding:4em 1em 0 1em;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:column;-ms-flex-flow:column;flex-flow:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:100%;}@media (max-width:var(--w1ui65ge-1)){.w1ui65ge{padding-top:2em;}}
.t11ybe2p{width:960px;max-width:90vw;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row;-ms-flex-flow:row;flex-flow:row;}@media (max-width:var(--t11ybe2p-0)){.t11ybe2p{-webkit-flex-flow:column-reverse;-ms-flex-flow:column-reverse;flex-flow:column-reverse;}}
.l1qknp3w{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row;-ms-flex-flow:row;flex-flow:row;width:75%;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media (max-width:var(--l1qknp3w-0)){.l1qknp3w{-webkit-flex-flow:column;-ms-flex-flow:column;flex-flow:column;width:100%;}}
.c1aslbai{width:150px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:column nowrap;-ms-flex-flow:column nowrap;flex-flow:column nowrap;}@media (max-width:var(--c1aslbai-0)){.c1aslbai{width:100%;}}
.cvcrkvk{font-size:18px;color:white;font-weight:bold;margin:.8em 0;}
.o2zwx58{width:25%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:column;-ms-flex-flow:column;flex-flow:column;}@media (max-width:var(--o2zwx58-0)){.o2zwx58{width:100%;-webkit-flex-flow:row;-ms-flex-flow:row;flex-flow:row;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}}
.b8jwuf4{width:750px;max-width:90vw;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:column;-ms-flex-flow:column;flex-flow:column;padding:3em 0;text-align:center;}
.t1tdreou{font-size:12px;}@media (max-width:var(--t1tdreou-0)){.t1tdreou{font-size:16px;}}
/*# sourceMappingURL=data:application/json;base64,*/