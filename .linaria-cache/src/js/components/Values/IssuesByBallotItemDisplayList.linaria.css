.w1ahz1og{overflow:show;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row;-ms-flex-flow:row;flex-flow:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;width:100%;}
.i2emcpt{width:100%;margin-left:-10px;}
.i1mhu7jo{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:rowvar(--i1mhu7jo-0);-ms-flex-flow:rowvar(--i1mhu7jo-0);flex-flow:rowvar(--i1mhu7jo-0);padding-inline-start:0;}
.m1l2l1s{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row;-ms-flex-flow:row;flex-flow:row;display:inline;background-color:white;position:absolute;right:-30px;margin-top:-3px;width:90px;height:40px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;padding-left:4px;}
/*# sourceMappingURL=data:application/json;base64,*/