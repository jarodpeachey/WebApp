.fbzo2md{margin-top:10px;}
.pt51m55{overflow-x:hidden;width:100%;height:100%;position:relative;right:12px;bottom:8px;border-radius:3px;margin-left:12px;margin-top:8px;}
.v1hscdrg{-webkit-align-items:start;-webkit-box-align:start;-ms-flex-align:start;align-items:start;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:none;-ms-flex:none;flex:none;-webkit-var(--v1hscdrg-0) padding:4px;-moz-var(--v1hscdrg-0) padding:4px;-ms-var(--v1hscdrg-0) padding:4px;var(--v1hscdrg-0) padding:4px;position:relative;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;}
.o10n217e{color:#999;font-weight:200;margin-top:4px;}
.p1hze2ol{background:var(--p1hze2ol-0);padding:4px 8px;min-height:35px;color:white;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0;}
.png4375{font-weight:bold;font-size:16px;}
.p1maf5jk{font-size:14px;font-weight:bold;margin-left:8px;}
.p1nssxnw{padding:8px;}
.rx9rg6w{margin-top:6px;}
/*# sourceMappingURL=data:application/json;base64,*/