.i5era75{width:100%;margin:4px 0px;padding:0px;}@media (min-width:var(--i5era75-0)){.i5era75{width:50%;padding:0px 4px;}}
.w1wur2oq{padding:15px 0 15px 0;border:none;border-bottom:2px solid #e3e3e3;}@media (min-width:var(--w1wur2oq-0)){.w1wur2oq{border:1px solid #e3e3e3;padding:6px 0px 6px 4px;border-radius:4px;position:relative;}}
.iltqp8m{font-size:18px;font-weight:bold;margin-bottom:0;}@media (min-width:var(--iltqp8m-0)){.iltqp8m{font-size:12px;position:relative;right:10px;}}
.f1j9uya{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}
.dzff04f{margin-top:8px;font-size:14px;color:#333;}@media (min-width:var(--dzff04f-0)){.dzff04f{display:none;}}
/*# sourceMappingURL=data:application/json;base64,*/