@media (min-width:992px){.cjoc4m3{padding-left:20px;padding-right:20px;}}
.mytsri6{width:90%;height:100%;margin:0 auto;}
.c7gxi1a{text-align:left;height:100%;}@media (max-width:576px){.c7gxi1a{padding:16px;box-shadow:1px .5px 5px 0 #cacaca;border-radius:3px;text-align:center;}}
.c1a5hgki{background:white;margin:0 auto;z-index:999;text-align:center;border-radius:3px;padding:16px;box-shadow:1px .5px 5px 0 #cacaca;border:1px solid #cacaca;}@media (min-width:576px){.c1a5hgki{-webkit-animation:scaleCard-c1a5hgki .25s ease-out;animation:scaleCard-c1a5hgki .25s ease-out;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;text-align:left;}}@-webkit-keyframes scaleCard-c1a5hgki{from{box-shadow:1px .5px 5px 0 #cacaca;}to{box-shadow:2px 1px 20px 5px #e1e1e1;}}@keyframes scaleCard-c1a5hgki{from{box-shadow:1px .5px 5px 0 #cacaca;}to{box-shadow:2px 1px 20px 5px #e1e1e1;}}
.incdpgr{width:100%;}.incdpgr > *{width:100%;}@media (max-width:576px){.incdpgr{width:40%;margin:0 auto;}.incdpgr > *{border-radius:50%;}}
.i1veb6jv{width:75px;height:75px;}@media (max-width:576px){.i1veb6jv{border-radius:50%;margin:0 auto;text-align:center;width:50px;height:50px;}}
@media (max-width:576px){.t1fznmwo{position:relative;bottom:4px;}}
.n1q4j9gz{font-size:16px;font-weight:bold;margin-top:4px;text-align:left;}@media (max-width:576px){.n1q4j9gz{font-size:16px;font-weight:bold;text-align:center;margin-top:8px;}}
.njh66wa{font-size:20px;font-weight:bold;text-align:left;margin-top:8px;margin-bottom:4px;}@media (max-width:576px){.njh66wa{text-align:center;}}
.t1kfjzk5{color:#cacaca;font-size:12px;text-align:left;}@media (max-width:576px){.t1kfjzk5{font-size:16px;text-align:center;}}
.txq60gv{font-size:16px;color:#cacaca;text-align:left;}@media (max-width:576px){.txq60gv{text-align:center;}}
.d1w8za6x{height:2px;background:#e3e3e3;width:100%;}
.d1v71frr{font-size:16px;color:black;margin-top:8px;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxKYXJvZFxcV2VWb3RlXFxXZWJBcHBcXHNyY1xcanNcXGNvbXBvbmVudHNcXE1vcmVcXFRlYW1NZW1iZXJEaXNwbGF5Rm9yTGlzdC5qc3giXSwibmFtZXMiOlsiLmNqb2M0bTMiLCIubXl0c3JpNiIsIi5jN2d4aTFhIiwiLmMxYTVoZ2tpIiwiLmluY2RwZ3IiLCIuaTF2ZWI2anYiLCIudDFmem5td28iLCIubjFxNGo5Z3oiLCIubmpoNjZ3YSIsIi50MWtmanprNSIsIi50eHE2MGd2IiwiLmQxdzh6YTZ4IiwiLmQxdjcxZnJyIl0sIm1hcHBpbmdzIjoiQUE4Rk1BO0FBT0FDO0FBTUFDO0FBV0FDO0FBd0JBQztBQWNBQztBQVlBQztBQU9BQztBQWFBQztBQVdBQztBQVVBQztBQVNBQztBQU1BQyIsImZpbGUiOiJEOlxcSmFyb2RcXFdlVm90ZVxcV2ViQXBwXFxzcmNcXGpzXFxjb21wb25lbnRzXFxNb3JlXFxUZWFtTWVtYmVyRGlzcGxheUZvckxpc3QuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tICdsaW5hcmlhL3JlYWN0JztcbmltcG9ydCB7IHJlbmRlckxvZyB9IGZyb20gJy4uLy4uL3V0aWxzL2xvZ2dpbmcnO1xuaW1wb3J0IEltYWdlSGFuZGxlciBmcm9tICcuLi9JbWFnZUhhbmRsZXInO1xuXG5jbGFzcyBUZWFtTWVtYmVyRGlzcGxheUZvckxpc3QgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHRlYW1NZW1iZXI6IFByb3BUeXBlcy5vYmplY3QsXG4gIH07XG5cbiAgY29uc3RydWN0b3IgKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBob3ZlcjogbnVsbCxcbiAgICAgIGhhc0Rlc2NyaXB0aW9uOiBmYWxzZSxcbiAgICB9O1xuICAgIHRoaXMuaGFuZGxlRW50ZXJDYXJkID0gdGhpcy5oYW5kbGVFbnRlckNhcmQuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZUxlYXZlQ2FyZCA9IHRoaXMuaGFuZGxlTGVhdmVDYXJkLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zZXREZXNjcmlwdGlvblRydWUgPSB0aGlzLnNldERlc2NyaXB0aW9uVHJ1ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2V0RGVzY3JpcHRpb25GYWxzZSA9IHRoaXMuc2V0RGVzY3JpcHRpb25GYWxzZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQgKCkge1xuICAgIGlmICh0aGlzLnByb3BzLnRlYW1NZW1iZXIudGl0bGVbMV0pIHtcbiAgICAgIHRoaXMuc2V0RGVzY3JpcHRpb25UcnVlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0RGVzY3JpcHRpb25GYWxzZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldERlc2NyaXB0aW9uVHJ1ZSAoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGhhc0Rlc2NyaXB0aW9uOiB0cnVlIH0pO1xuICB9XG5cbiAgc2V0RGVzY3JpcHRpb25GYWxzZSAoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGhhc0Rlc2NyaXB0aW9uOiBmYWxzZSB9KTtcbiAgfVxuXG4gIGhhbmRsZUVudGVyQ2FyZCAoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGhvdmVyOiB0cnVlIH0pO1xuICB9XG5cbiAgaGFuZGxlTGVhdmVDYXJkICgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgaG92ZXI6IGZhbHNlIH0pO1xuICB9XG5cbiAgcmVuZGVyICgpIHtcbiAgICByZW5kZXJMb2coJ1RlYW1NZW1iZXJEaXNwbGF5Rm9yTGlzdC5qc3gnKTsgIC8vIFNldCBMT0dfUkVOREVSX0VWRU5UUyB0byBsb2cgYWxsIHJlbmRlcnNcblxuICAgIGNvbnN0IHsgaW1hZ2U6IHRlYW1NZW1iZXJJbWFnZSwgbmFtZTogdGVhbU1lbWJlck5hbWUsIHRpdGxlOiB0ZWFtTWVtYmVyVGl0bGUgfSA9IHRoaXMucHJvcHMudGVhbU1lbWJlcjtcbiAgICAvLyBjb25zb2xlLmxvZyh0ZWFtTWVtYmVyTmFtZSwgJy0nLCB0ZWFtTWVtYmVyVGl0bGVbMF0pO1xuXG4gICAgaWYgKCF0aGlzLnByb3BzLnRlYW1NZW1iZXIgfHwgIXRlYW1NZW1iZXJOYW1lKSByZXR1cm4gbnVsbDtcblxuICAgIHJldHVybiAoXG4gICAgICA8Q29sIGNsYXNzTmFtZT1cImNvbC0xMiBjb2wtc20tNiBjb2wtbWQtNCBtYi0zXCIga2V5PXtgdGVhbS0ke3RlYW1NZW1iZXJOYW1lfS0ke3RlYW1NZW1iZXJUaXRsZVswXX1gfT5cbiAgICAgICAgPE1lbWJlckNvbnRhaW5lciBvbk1vdXNlRW50ZXI9e3RoaXMuaGFuZGxlRW50ZXJDYXJkfSBvbk1vdXNlTGVhdmU9e3RoaXMuaGFuZGxlTGVhdmVDYXJkfSBvblRvdWNoU3RhcnQ9e3RoaXMuaGFuZGxlRW50ZXJDYXJkfSBvblRvdWNoRW5kPXt0aGlzLmhhbmRsZUxlYXZlQ2FyZH0+XG4gICAgICAgICAge3RoaXMuc3RhdGUuaG92ZXIgJiYgdGhpcy5zdGF0ZS5oYXNEZXNjcmlwdGlvbiA/IChcbiAgICAgICAgICAgIDxDYXJkSG92ZXI+XG4gICAgICAgICAgICAgIDxJbWFnZUhvdmVyPlxuICAgICAgICAgICAgICAgIDxJbWFnZUhhbmRsZXJcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImltZy1yZXNwb25zaXZlIHRlYW0tbWVtYmVyX19waG90b1wiXG4gICAgICAgICAgICAgICAgICBpbWFnZVVybD17dGVhbU1lbWJlckltYWdlfVxuICAgICAgICAgICAgICAgICAgYWx0PXt0ZWFtTWVtYmVyTmFtZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0ltYWdlSG92ZXI+XG4gICAgICAgICAgICAgIDxUZXh0V3JhcHBlcj5cbiAgICAgICAgICAgICAgICA8TmFtZUhvdmVyPnt0ZWFtTWVtYmVyTmFtZX08L05hbWVIb3Zlcj5cbiAgICAgICAgICAgICAgICA8VGl0bGVIb3Zlcj57dGVhbU1lbWJlclRpdGxlWzBdfTwvVGl0bGVIb3Zlcj5cbiAgICAgICAgICAgICAgPC9UZXh0V3JhcHBlcj5cbiAgICAgICAgICAgICAgPERpdmlkZXIgLz5cbiAgICAgICAgICAgICAgPERlc2NyaXB0aW9uPnt0ZWFtTWVtYmVyVGl0bGVbMV19PC9EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgIDwvQ2FyZEhvdmVyPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8Q2FyZERlZmF1bHQ+XG4gICAgICAgICAgICAgIDxJbWFnZT5cbiAgICAgICAgICAgICAgICA8SW1hZ2VIYW5kbGVyXG4gICAgICAgICAgICAgICAgICBpbWFnZVVybD17dGVhbU1lbWJlckltYWdlfVxuICAgICAgICAgICAgICAgICAgYWx0PXt0ZWFtTWVtYmVyTmFtZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0ltYWdlPlxuICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxOYW1lRGVmYXVsdD57dGVhbU1lbWJlck5hbWV9PC9OYW1lRGVmYXVsdD5cbiAgICAgICAgICAgICAgICA8VGl0bGVEZWZhdWx0Pnt0ZWFtTWVtYmVyVGl0bGVbMF19PC9UaXRsZURlZmF1bHQ+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9DYXJkRGVmYXVsdD5cbiAgICAgICAgICApfVxuICAgICAgICA8L01lbWJlckNvbnRhaW5lcj5cbiAgICAgIDwvQ29sPlxuICAgICk7XG4gIH1cbn1cblxuY29uc3QgQ29sID0gc3R5bGVkLmRpdmBcbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIH1cbmA7XG5cbmNvbnN0IE1lbWJlckNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiA5MCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG5jb25zdCBDYXJkRGVmYXVsdCA9IHN0eWxlZC5kaXZgXG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGhlaWdodDogMTAwJTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgICBib3gtc2hhZG93OiAxcHggLjVweCA1cHggMCAjY2FjYWNhO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbmA7XG5cbmNvbnN0IENhcmRIb3ZlciA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgei1pbmRleDogOTk5O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgcGFkZGluZzogMTZweDtcbiAgYm94LXNoYWRvdzogMXB4IC41cHggNXB4IDAgI2NhY2FjYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhY2FjYTtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gICAgYW5pbWF0aW9uOiBzY2FsZUNhcmQgLjI1cyBlYXNlLW91dDtcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG4gIEBrZXlmcmFtZXMgc2NhbGVDYXJkIHtcbiAgICBmcm9tIHtcbiAgICAgIGJveC1zaGFkb3c6IDFweCAuNXB4IDVweCAwICNjYWNhY2E7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgIGJveC1zaGFkb3c6IDJweCAxcHggMjBweCA1cHggI2UxZTFlMTtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IEltYWdlID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDEwMCU7XG4gID4gKiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gICAgd2lkdGg6IDQwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICA+ICoge1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgSW1hZ2VIb3ZlciA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiA3NXB4O1xuICBoZWlnaHQ6IDc1cHg7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICB9XG5gO1xuXG5jb25zdCBUZXh0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3R0b206IDRweDtcbiAgfVxuYDtcblxuY29uc3QgTmFtZUhvdmVyID0gc3R5bGVkLmg0YFxuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW4tdG9wOiA0cHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICB9XG5gO1xuXG5jb25zdCBOYW1lRGVmYXVsdCA9IHN0eWxlZC5oM2BcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbWFyZ2luLXRvcDogOHB4O1xuICBtYXJnaW4tYm90dG9tOiA0cHg7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuYDtcblxuY29uc3QgVGl0bGVIb3ZlciA9IHN0eWxlZC5wYFxuICBjb2xvcjogI2NhY2FjYTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5gO1xuXG5jb25zdCBUaXRsZURlZmF1bHQgPSBzdHlsZWQucGBcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogI2NhY2FjYTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5gO1xuXG5jb25zdCBEaXZpZGVyID0gc3R5bGVkLmRpdmBcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6ICNlM2UzZTM7XG4gIHdpZHRoOiAxMDAlO1xuYDtcblxuY29uc3QgRGVzY3JpcHRpb24gPSBzdHlsZWQucGBcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogYmxhY2s7XG4gIG1hcmdpbi10b3A6IDhweDtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IFRlYW1NZW1iZXJEaXNwbGF5Rm9yTGlzdDtcbiJdfQ==*/