


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxKYXJvZFxcV2VWb3RlXFxXZWJBcHBcXHNyY1xcanNcXGNvbXBvbmVudHNcXFNldHRpbmdzXFxTZXR0aW5nc1Byb21vdGVkT3JnYW5pemF0aW9ucy5qc3giXSwibmFtZXMiOlsiLncxdTU3ajdhIiwiLmMxbzdteGU5IiwiLmMxNGx1dDdwIl0sIm1hcHBpbmdzIjoiQUEwR01BO0FBR0FDO0FBR0FDIiwiZmlsZSI6IkQ6XFxKYXJvZFxcV2VWb3RlXFxXZWJBcHBcXHNyY1xcanNcXGNvbXBvbmVudHNcXFNldHRpbmdzXFxTZXR0aW5nc1Byb21vdGVkT3JnYW5pemF0aW9ucy5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEhlbG1ldCBmcm9tICdyZWFjdC1oZWxtZXQnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gJ2xpbmFyaWEvcmVhY3QnO1xuaW1wb3J0IExvYWRpbmdXaGVlbCBmcm9tICcuLi9Mb2FkaW5nV2hlZWwnO1xuaW1wb3J0IE9yZ2FuaXphdGlvblN0b3JlIGZyb20gJy4uLy4uL3N0b3Jlcy9Pcmdhbml6YXRpb25TdG9yZSc7XG5pbXBvcnQgeyByZW5kZXJMb2cgfSBmcm9tICcuLi8uLi91dGlscy9sb2dnaW5nJztcbmltcG9ydCBWb3RlclN0b3JlIGZyb20gJy4uLy4uL3N0b3Jlcy9Wb3RlclN0b3JlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2V0dGluZ3NQcm9tb3RlZE9yZ2FuaXphdGlvbnMgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHNhbXBsZVByb3BOYW1lOiBQcm9wVHlwZXMuYm9vbCwgLy8gZXNsaW50LWRpc2FibGUtbGluZSByZWFjdC9uby11bnVzZWQtcHJvcC10eXBlc1xuICB9O1xuXG4gIGNvbnN0cnVjdG9yIChwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgb3JnYW5pemF0aW9uOiB7fSxcbiAgICAgIG9yZ2FuaXphdGlvbldlVm90ZUlkOiAnJyxcbiAgICAgIHZvdGVyOiB7fSxcbiAgICAgIHZvdGVySXNTaWduZWRJbjogZmFsc2UsXG4gICAgfTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50ICgpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhcIlNldHRpbmdzUHJvbW90ZWRPcmdhbml6YXRpb25zIGNvbXBvbmVudERpZE1vdW50XCIpO1xuICAgIHRoaXMub25Wb3RlclN0b3JlQ2hhbmdlKCk7XG4gICAgdGhpcy5vcmdhbml6YXRpb25TdG9yZUxpc3RlbmVyID0gT3JnYW5pemF0aW9uU3RvcmUuYWRkTGlzdGVuZXIodGhpcy5vbk9yZ2FuaXphdGlvblN0b3JlQ2hhbmdlLmJpbmQodGhpcykpO1xuICAgIHRoaXMudm90ZXJTdG9yZUxpc3RlbmVyID0gVm90ZXJTdG9yZS5hZGRMaXN0ZW5lcih0aGlzLm9uVm90ZXJTdG9yZUNoYW5nZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIHNob3VsZENvbXBvbmVudFVwZGF0ZSAobmV4dFByb3BzLCBuZXh0U3RhdGUpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5vcmdhbml6YXRpb25XZVZvdGVJZCAhPT0gbmV4dFN0YXRlLm9yZ2FuaXphdGlvbldlVm90ZUlkKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZygndGhpcy5zdGF0ZS5vcmdhbml6YXRpb25XZVZvdGVJZCcsIHRoaXMuc3RhdGUub3JnYW5pemF0aW9uV2VWb3RlSWQsICcsIG5leHRTdGF0ZS5vcmdhbml6YXRpb25XZVZvdGVJZCcsIG5leHRTdGF0ZS5vcmdhbml6YXRpb25XZVZvdGVJZCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHRoaXMuc3RhdGUudm90ZXJJc1NpZ25lZEluICE9PSBuZXh0U3RhdGUudm90ZXJJc1NpZ25lZEluKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZygndGhpcy5zdGF0ZS52b3RlcklzU2lnbmVkSW4nLCB0aGlzLnN0YXRlLnZvdGVySXNTaWduZWRJbiwgJywgbmV4dFN0YXRlLnZvdGVySXNTaWduZWRJbicsIG5leHRTdGF0ZS52b3RlcklzU2lnbmVkSW4pO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgY29uc3QgcHJpb3JPcmdhbml6YXRpb24gPSB0aGlzLnN0YXRlLm9yZ2FuaXphdGlvbjtcbiAgICBjb25zdCBuZXh0T3JnYW5pemF0aW9uID0gbmV4dFN0YXRlLm9yZ2FuaXphdGlvbjtcblxuICAgIGNvbnN0IHByaW9yV2VWb3RlQ3VzdG9tRG9tYWluID0gcHJpb3JPcmdhbml6YXRpb24ud2Vfdm90ZV9jdXN0b21fZG9tYWluIHx8ICcnO1xuICAgIGNvbnN0IG5leHRXZVZvdGVDdXN0b21Eb21haW4gPSBuZXh0T3JnYW5pemF0aW9uLndlX3ZvdGVfY3VzdG9tX2RvbWFpbiB8fCAnJztcblxuICAgIGlmIChwcmlvcldlVm90ZUN1c3RvbURvbWFpbiAhPT0gbmV4dFdlVm90ZUN1c3RvbURvbWFpbikge1xuICAgICAgLy8gY29uc29sZS5sb2coJ3ByaW9yV2VWb3RlQ3VzdG9tRG9tYWluJywgcHJpb3JXZVZvdGVDdXN0b21Eb21haW4sICcsIG5leHRXZVZvdGVDdXN0b21Eb21haW4nLCBuZXh0V2VWb3RlQ3VzdG9tRG9tYWluKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyBjb25zb2xlLmxvZygnc2hvdWxkQ29tcG9uZW50VXBkYXRlIGZhbHNlJyk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQgKCkge1xuICAgIHRoaXMub3JnYW5pemF0aW9uU3RvcmVMaXN0ZW5lci5yZW1vdmUoKTtcbiAgICB0aGlzLnZvdGVyU3RvcmVMaXN0ZW5lci5yZW1vdmUoKTtcbiAgfVxuXG4gIG9uT3JnYW5pemF0aW9uU3RvcmVDaGFuZ2UgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBvcmdhbml6YXRpb25XZVZvdGVJZCB9ID0gdGhpcy5zdGF0ZTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG9yZ2FuaXphdGlvbjogT3JnYW5pemF0aW9uU3RvcmUuZ2V0T3JnYW5pemF0aW9uQnlXZVZvdGVJZChvcmdhbml6YXRpb25XZVZvdGVJZCksXG4gICAgfSk7XG4gIH07XG5cbiAgb25Wb3RlclN0b3JlQ2hhbmdlID0gKCkgPT4ge1xuICAgIGNvbnN0IHZvdGVyID0gVm90ZXJTdG9yZS5nZXRWb3RlcigpO1xuICAgIGNvbnN0IHZvdGVySXNTaWduZWRJbiA9IHZvdGVyLmlzX3NpZ25lZF9pbjtcbiAgICBjb25zdCBvcmdhbml6YXRpb25XZVZvdGVJZCA9IHZvdGVyLmxpbmtlZF9vcmdhbml6YXRpb25fd2Vfdm90ZV9pZDtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG9yZ2FuaXphdGlvbjogT3JnYW5pemF0aW9uU3RvcmUuZ2V0T3JnYW5pemF0aW9uQnlXZVZvdGVJZChvcmdhbml6YXRpb25XZVZvdGVJZCksXG4gICAgICBvcmdhbml6YXRpb25XZVZvdGVJZCxcbiAgICAgIHZvdGVyLFxuICAgICAgdm90ZXJJc1NpZ25lZEluLFxuICAgIH0pO1xuICB9O1xuXG4gIHJlbmRlciAoKSB7XG4gICAgcmVuZGVyTG9nKCdTZXR0aW5nc1Byb21vdGVkT3JnYW5pemF0aW9ucycpOyAgLy8gU2V0IExPR19SRU5ERVJfRVZFTlRTIHRvIGxvZyBhbGwgcmVuZGVyc1xuICAgIGNvbnN0IHsgb3JnYW5pemF0aW9uLCBvcmdhbml6YXRpb25XZVZvdGVJZCwgdm90ZXIsIHZvdGVySXNTaWduZWRJbiB9ID0gdGhpcy5zdGF0ZTtcbiAgICBpZiAoIXZvdGVyIHx8ICFvcmdhbml6YXRpb25XZVZvdGVJZCkge1xuICAgICAgcmV0dXJuIExvYWRpbmdXaGVlbDtcbiAgICB9XG5cbiAgICBpZiAodm90ZXJJc1NpZ25lZEluKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZygnU2V0dGluZ3NQcm9tb3RlZE9yZ2FuaXphdGlvbnMsIFNpZ25lZCBJbi4nKTtcbiAgICB9XG4gICAgaWYgKG9yZ2FuaXphdGlvbiAmJiBvcmdhbml6YXRpb24ud2Vfdm90ZV9jdXN0b21fZG9tYWluKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZygnU2V0dGluZ3NQcm9tb3RlZE9yZ2FuaXphdGlvbnMsIEN1c3RvbSBEb21haW46ICcsIG9yZ2FuaXphdGlvbi53ZV92b3RlX2N1c3RvbV9kb21haW4pO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgPFdyYXBwZXI+XG4gICAgICAgIDxIZWxtZXQgdGl0bGU9XCJEb21haW4gU2V0dGluZ3NcIiAvPlxuICAgICAgICA8Q2FyZCBjbGFzc05hbWU9XCJjYXJkXCI+XG4gICAgICAgICAgPENhcmRNYWluIGNsYXNzTmFtZT1cImNhcmQtbWFpblwiPlxuICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cImgzXCI+UHJvbW90ZWQgT3JnYW5pemF0aW9ucyAmIFB1YmxpYyBGaWd1cmVzPC9oMT5cbiAgICAgICAgICAgIEFkZCBzcmMvanMvY29tcG9uZW50cy9TZXR0aW5ncy9TZXR0aW5nc1Byb21vdGVkT3JnYW5pemF0aW9ucyBjb2RlIGhlcmUuXG4gICAgICAgICAgPC9DYXJkTWFpbj5cbiAgICAgICAgPC9DYXJkPlxuICAgICAgPC9XcmFwcGVyPlxuICAgICk7XG4gIH1cbn1cblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG5gO1xuXG5jb25zdCBDYXJkID0gc3R5bGVkLmRpdmBcbmA7XG5cbmNvbnN0IENhcmRNYWluID0gc3R5bGVkLmRpdmBcbmA7XG4iXX0=*/