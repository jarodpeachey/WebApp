.pbqw6kp{border-radius:5px;margin:16px;list-style:none;max-width:100% !important;}@media (max-width:476px){.pbqw6kp{margin:16px 0;}}
.m18y7ii6{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;padding:6px 0 6px 8px;min-height:46px;}
.m1banj31{margin-right:16px;width:40px;height:40px;}.m1banj31 *{border-radius:40px;width:40px !important;height:40px !important;max-width:40px !important;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}.m1banj31 *::before{font-size:40px !important;}
.m1remb78{font-size:18px;font-weight:500;margin-bottom:4px;}
.m1i9lulr{display:block;}@media (max-width:374px){.m1i9lulr{display:none;}}
@media (min-width:375px){.m1d3vw52{display:none;}}
.m13czj34{width:100%;margin-top:-12px;}@media (min-width:375px){.m13czj34{display:none;}}
.m16oo2e{margin:0;font-size:14px;-webkit-flex:1 1 0;-ms-flex:1 1 0;flex:1 1 0;}
.m1abwxci{margin-left:auto;margin-bottom:auto;width:50px;height:100%;max-height:100%;}
.mx1d6rs{width:100%;height:100%;margin-bottom:46px;}
.mksnhg{padding:6px 6px 6px;background:#f7f7f7;border-bottom-right-radius:8px;border-top-right-radius:8px;border-bottom-left-radius:5px;}
.mh3yi55{left:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}
.m4ln2ev{font-size:16px;color:#333;-webkit-flex:1 1 0;-ms-flex:1 1 0;flex:1 1 0;}@media (max-width:var(--m4ln2ev-0)){.m4ln2ev{font-size:14px;}}
.mk6edb9{width:75px;}
.mh4q38b{height:20px;width:100%;margin-top:2px;font-size:12px;}
.dbpk6i{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;margin:24px;}
.d11mwup{width:85px;padding:0 16px 0 0;}
.dl8n9rw{width:57.76px;margin:0 auto;height:57.76px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:8px;}.dl8n9rw *{border-radius:57.76px;width:57.76px !important;height:57.76px !important;max-width:57.76px !important;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}
.pj98g00{border-radius:5px;list-style:none;padding:6px 16px;background:#f7f7f7;-webkit-flex:1 1 0;-ms-flex:1 1 0;flex:1 1 0;}
.d4gfaok{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}
.dypaluz{padding:0px;}
.d1i1s51z{font-size:18px;font-weight:bold;margin:0;}
.d13rzs7{margin:0;}
.d22g22y{margin-left:auto;padding:0;}
.d5xkc9v{margin:0;}
.d1jhepgr{font-size:14px;margin-top:8px;}
.dt3jbpb{font-size:12px;margin-top:2px;}
.syeictc{color:white;background:var(--syeictc-0);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:40px;height:40px;border-radius:5px;float:right;font-size:16px;font-weight:bold;}@media print{.syeictc{border:2px solid grey;}}
.odbd813{color:white;background:var(--odbd813-0);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:40px;height:40px;border-radius:5px;float:right;font-size:16px;font-weight:bold;}@media print{.odbd813{border:2px solid grey;}}
.shz3nky{color:var(--shz3nky-0);background:white;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:40px;height:40px;border-radius:5px;border:3px solid var(--shz3nky-0);float:right;font-size:20px;font-weight:bold;}
.ozcm19c{color:var(--ozcm19c-0);background:white;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:40px;height:40px;border-radius:5px;float:right;border:3px solid var(--ozcm19c-0);font-size:20px;font-weight:bold;}
.i70fmwf{color:var(--i70fmwf-0);background:white;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:40px;height:40px;border-radius:5px;float:right;border:3px solid var(--i70fmwf-0);font-size:20px;font-weight:bold;}
.s1edmyiz{float:right;margin-bottom:-4px;}
/*# sourceMappingURL=data:application/json;base64,*/