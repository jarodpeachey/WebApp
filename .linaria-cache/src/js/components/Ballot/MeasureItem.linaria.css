.iaxi4xg{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}
.mx2vxd5{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:column;-ms-flex-flow:column;flex-flow:column;max-width:75%;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;padding-right:8px;}@media (max-width:var(--mx2vxd5-0)){.mx2vxd5{max-width:70%;}}
.t10igdqx{font-size:18px;font-weight:bold;margin:.1rem 0;}@media (max-width:var(--t10igdqx-0)){.t10igdqx{font-size:16px;}}
.s1vot5bq{font-size:16px;font-weight:300;color:#555;margin-top:.6rem;width:135%;}@media (max-width:var(--s1vot5bq-0)){.s1vot5bq{font-size:13px;}}
/*# sourceMappingURL=data:application/json;base64,*/