.s1wzqz0m{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;font-weight:bolder;font-size:18px;margin-bottom:16px;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxKYXJvZFxcV2VWb3RlXFxXZWJBcHBcXHNyY1xcanNcXGNvbXBvbmVudHNcXEZyaWVuZHNcXEZyaWVuZHNDdXJyZW50UHJldmlldy5qc3giXSwibmFtZXMiOlsiLnMxd3pxejBtIl0sIm1hcHBpbmdzIjoiQUF5RU1BIiwiZmlsZSI6IkQ6XFxKYXJvZFxcV2VWb3RlXFxXZWJBcHBcXHNyY1xcanNcXGNvbXBvbmVudHNcXEZyaWVuZHNcXEZyaWVuZHNDdXJyZW50UHJldmlldy5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tICdsaW5hcmlhL3JlYWN0JztcbmltcG9ydCBGcmllbmRMaXN0IGZyb20gJy4vRnJpZW5kTGlzdCc7XG5pbXBvcnQgRnJpZW5kQWN0aW9ucyBmcm9tICcuLi8uLi9hY3Rpb25zL0ZyaWVuZEFjdGlvbnMnO1xuaW1wb3J0IEZyaWVuZFN0b3JlIGZyb20gJy4uLy4uL3N0b3Jlcy9GcmllbmRTdG9yZSc7XG5pbXBvcnQgeyByZW5kZXJMb2cgfSBmcm9tICcuLi8uLi91dGlscy9sb2dnaW5nJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRnJpZW5kc0N1cnJlbnRQcmV2aWV3IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgfTtcblxuICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGN1cnJlbnRGcmllbmRMaXN0OiBbXSxcbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQgKCkge1xuICAgIEZyaWVuZEFjdGlvbnMuY3VycmVudEZyaWVuZHMoKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGN1cnJlbnRGcmllbmRMaXN0OiBGcmllbmRTdG9yZS5jdXJyZW50RnJpZW5kcygpLFxuICAgIH0pO1xuICAgIHRoaXMuZnJpZW5kU3RvcmVMaXN0ZW5lciA9IEZyaWVuZFN0b3JlLmFkZExpc3RlbmVyKHRoaXMub25GcmllbmRTdG9yZUNoYW5nZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50ICgpIHtcbiAgICB0aGlzLmZyaWVuZFN0b3JlTGlzdGVuZXIucmVtb3ZlKCk7XG4gIH1cblxuICBvbkZyaWVuZFN0b3JlQ2hhbmdlICgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGN1cnJlbnRGcmllbmRMaXN0OiBGcmllbmRTdG9yZS5jdXJyZW50RnJpZW5kcygpLFxuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyICgpIHtcbiAgICByZW5kZXJMb2coJ0ZyaWVuZHNDdXJyZW50UHJldmlldycpOyAgLy8gU2V0IExPR19SRU5ERVJfRVZFTlRTIHRvIGxvZyBhbGwgcmVuZGVyc1xuICAgIGNvbnN0IHsgY3VycmVudEZyaWVuZExpc3QgfSA9IHRoaXMuc3RhdGU7XG4gICAgaWYgKCFjdXJyZW50RnJpZW5kTGlzdCB8fCAhKGN1cnJlbnRGcmllbmRMaXN0Lmxlbmd0aCA+IDApKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCBGUklFTkRTX1RPX1NIT1cgPSAzO1xuICAgIGNvbnN0IGN1cnJlbnRGcmllbmRMaXN0TGltaXRlZCA9IGN1cnJlbnRGcmllbmRMaXN0LnNsaWNlKDAsIEZSSUVORFNfVE9fU0hPVyk7XG5cbiAgICByZXR1cm4gKChjdXJyZW50RnJpZW5kTGlzdExpbWl0ZWQgJiYgY3VycmVudEZyaWVuZExpc3RMaW1pdGVkLmxlbmd0aCA+IDApICYmIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3Bpbmlvbi12aWV3XCI+XG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImNhcmRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtbWFpblwiPlxuICAgICAgICAgICAgPFNlY3Rpb25UaXRsZT5cbiAgICAgICAgICAgICAgWW91ciBGcmllbmRzXG4gICAgICAgICAgICAgIHsnICd9XG4gICAgICAgICAgICAgIChcbiAgICAgICAgICAgICAge2N1cnJlbnRGcmllbmRMaXN0Lmxlbmd0aH1cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgPC9TZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8RnJpZW5kTGlzdFxuICAgICAgICAgICAgICAgIGVkaXRNb2RlXG4gICAgICAgICAgICAgICAgZnJpZW5kTGlzdD17Y3VycmVudEZyaWVuZExpc3RMaW1pdGVkfVxuICAgICAgICAgICAgICAgIHByZXZpZXdNb2RlXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIHtjdXJyZW50RnJpZW5kTGlzdC5sZW5ndGggPiBGUklFTkRTX1RPX1NIT1cgJiYgPExpbmsgdG89XCIvZnJpZW5kcy9jdXJyZW50XCI+U2VlIEFsbDwvTGluaz59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgPC9kaXY+XG4gICAgKSk7XG4gIH1cbn1cblxuY29uc3QgU2VjdGlvblRpdGxlID0gc3R5bGVkLmgyYFxuICB3aWR0aDogZml0LWNvbnRlbnQ7ICBmb250LXdlaWdodDogYm9sZGVyO1xuICBmb250LXNpemU6IDE4cHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuIl19*/