.w1f0z4vd{width:100%;background-color:var(--w1f0z4vd-0);padding:4px;border-radius:4px;}@media (max-width:var(--w1f0z4vd-1)){.w1f0z4vd{background-color:white;padding:0;}}
.a18q7mhk{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row nowrap;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:0px;}
/*# sourceMappingURL=data:application/json;base64,*/