.p1a883wi{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background:transparent;position:relative;}
.c1gma4yc{border:1px solid #fff;padding:16px 16px 8px;font-size:14px;position:relative;}
/*# sourceMappingURL=data:application/json;base64,*/