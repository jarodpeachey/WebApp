.wuu7c4i{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:column;-ms-flex-flow:column;flex-flow:column;}
.b9drqno{display:block;}@media (min-width:var(--b9drqno-0)){.b9drqno{-webkit-align-self:flex-end;-ms-flex-item-align:end;align-self:flex-end;width:640px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:0 15px;}}@media (max-width:var(--b9drqno-1)){.b9drqno{display:none;}}@media (max-width:var(--b9drqno-2)){.b9drqno{display:none;}}
@media (min-width:var(--clm6ita-0)){.clm6ita{margin-top:var(--clm6ita-1);}}
/*# sourceMappingURL=data:application/json;base64,*/