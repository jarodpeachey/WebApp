.w18lmhrm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:column nowrap;-ms-flex-flow:column nowrap;flex-flow:column nowrap;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:white;overflow-x:hidden;}
.h1ydvp9a{position:relative;height:190px;width:110%;color:white;background-image:linear-gradient(to bottom,#415a99,#2d3b5e);border-bottom-left-radius:50% 25%;border-bottom-right-radius:50% 25%;padding:0 2em;margin-top:-72px;text-align:center;}@media (max-width:var(--h1ydvp9a-0)){.h1ydvp9a{height:190px;}}@media (max-width:var(--h1ydvp9a-1)){.h1ydvp9a{height:150px;}}
.c101ppgm{font-weight:bold;font-size:36px;text-align:center;margin-top:3em;margin-bottom:0;padding-bottom:0;}@media (max-width:var(--c101ppgm-0)){.c101ppgm{font-size:28px;margin-top:3em;}}@media (max-width:var(--c101ppgm-1)){.c101ppgm{font-size:18px;margin-top:5em;}}
.ckjq5du{margin:1em auto;width:960px;max-width:90vw;text-align:left;}@media (min-width:960px) and (max-width:991px){.ckjq5du{max-width:100%;min-width:100%;width:100%;margin:0 auto;}.ckjq5du > *{width:90%;margin:0 auto;}}
.c1m0n76k{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;text-align:center;}
.s1md37y7{font-size:28px;font-weight:300;margin-bottom:10px;}@media (max-width:var(--s1md37y7-0)){.s1md37y7{font-size:24px;margin-bottom:9px;}}
/*# sourceMappingURL=data:application/json;base64,*/